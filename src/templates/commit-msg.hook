#!/bin/sh
# commit-msg hook generated by @ai-coding-workshop/commit-msg

# Define package name
PKG="@ai-coding-workshop/commit-msg"

# Debug mode - uncomment the next line to enable debug output
# DEBUG=1

debug() {
    if test -n "$DEBUG"
    then
        echo >&2 "[DEBUG] $*"
    fi
}

check_command_version() {
    if test $# -eq 0
    then
        echo >&2 "Usage: check_command_version <command> [args...]"
        return 1
    fi

    # Construct the command string
    cmd="$1"
    shift
    while test $# -gt 0
    do
        cmd="$cmd '$1'"
        shift
    done

    # Try to get version and check if it's our package
    VERSION_OUTPUT=$(eval "$cmd --version" 2>/dev/null || true)

    if echo "$VERSION_OUTPUT" | grep -q "$PKG"; then
        debug "Version matched for command: $cmd"
        return 0
    else
        # Only show warning if we got some version output
        if test -n "$VERSION_OUTPUT"; then
            echo >&2 "WARNING: Found commit-msg command but not from $PKG package"
            echo >&2 "WARNING: Unrecognized --version output: $VERSION_OUTPUT"
        else
            echo >&2 "WARNING: fail to run: $cmd --version"
        fi
        return 1
    fi
}

debug "Starting commit-msg hook execution"
debug "Package name: $PKG"
debug "Arguments: $*"

# Find commit-msg in PATH, which is quicker than using npm.
if command -v commit-msg >/dev/null 2>&1; then
    debug "Found commit-msg command in PATH"

    if check_command_version commit-msg; then
        debug "Executing commit-msg command"
        commit-msg exec "$@"
        exit $?
    else
        # Continue to next method if version check fails
        debug "Version check failed for PATH commit-msg, continuing to next method"
    fi
else
    debug "commit-msg command not found in PATH"
fi

# Fail if node.js is not installed.
if ! command -v npm >/dev/null 2>&1
then
    cat >&2 <<EOF
ERROR: Node.js is not installed or not in PATH.

To resolve this issue:
1. Install Node.js from https://nodejs.org
2. Ensure npm is in your PATH
3. Then install the required package by running:
   npm install -g $PKG
EOF
    exit 1
fi

# Find commit-msg in global npm prefix, which is quicker than running npx.
global_prefix=$(npm prefix -g 2>/dev/null)
cmd="$global_prefix/bin/commit-msg"
if test -n "$global_prefix" && test -x "$cmd"
then
    debug "Found commit-msg command: $cmd"
    if check_command_version "$cmd"
    then
        debug "Executing commit-msg in npm global prefix: $global_prefix"
        "$cmd" exec "$@"
        exit $?
    fi
fi

# Find commit-msg in local npm prefix, which is quicker than running npx.
local_prefix=$(npm prefix 2>/dev/null)
cmd="$local_prefix/node_modules/.bin/commit-msg"
if test -n "$local_prefix" && test -x "$cmd"
then
    debug "Found commit-msg command: $cmd"
    if check_command_version "$cmd"
    then
        debug "Executing commit-msg in npm local prefix: $local_prefix"
        "$cmd" exec "$@"
        exit $?
    fi
fi

# Try to use npx with our package
debug "Attempting to run $PKG using npx"

# Find commit-msg using npx, which is much slower.
if check_command_version npx --no-install "$PKG"
then
    debug "Executing commit-msg using npx --no-install $PKG"
    npx --no-install "$PKG" exec "$@"
    exit $?
fi

# If we've reached this point, it means we couldn't find the commit-msg command
# Show the error message and exit with error code

cat >&2 <<EOF
ERROR: Cannot find node.js package "$PKG" from ${global_prefix}/bin
Please install the package globally with:
  npm install -g $PKG
EOF

exit 1
