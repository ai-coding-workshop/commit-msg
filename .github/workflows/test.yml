name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Check Node.js version
      run: |
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"
        echo "Node.js major version: $(node --version | cut -d. -f1 | tr -d v)"

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run tests
      run: npm test
      env:
        # Set longer timeout for tests
        VITEST_TIMEOUT: 60000

    - name: Run linting
      run: npm run lint

    - name: Check formatting
      run: npx prettier --check src/ test/

    - name: Test development mode compatibility
      run: |
        NODE_VERSION=$(node --version | cut -d. -f1 | tr -d v)
        echo "Testing development mode for Node.js $NODE_VERSION"

        if [ "$NODE_VERSION" -eq 22 ]; then
          echo "Testing with npm run dev"
          npm run dev -- --version
        elif [ "$NODE_VERSION" -eq 20 ]; then
          echo "Testing with npm run dev:node20"
          npm run dev:node20 -- --version
        elif [ "$NODE_VERSION" -eq 18 ]; then
          echo "Testing with npm run dev:node18"
          npm run dev:node18 -- --version
        else
          echo "Testing with npm run dev:compat"
          npm run dev:compat -- --version
        fi
      continue-on-error: true
